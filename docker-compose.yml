version: '4.27'
services:
  ##############################
  ###     INFRASTRUCTURE     ###
  ##############################
  gateway:
    build:
      context: ./
      args:
        MODULE_PATH: 'gateway'
        BUILD_MODULE_PATH: 'gateway'
    ports:
      - "8080:8080"
    environment:
      GATEWAY_ALLOWED_ORIGINS: 'http://localhost:3000'
    networks:
      - infrastructure-network
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    expose:
      - "2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - kafka-network
      - infrastructure-network
  kafka:
    image: confluentinc/cp-kafka:latest
    expose:
      - "9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://:9092,PLAINTEXT_HOST://:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      - kafka-network
      - infrastructure-network



  ##############################
  ###        BUSINESS        ###
  ##############################
  business:
    depends_on:
      business-db:
        condition: service_healthy
    build:
      context: ./
      args:
        MODULE_PATH: 'business'
        BUILD_MODULE_PATH: 'business/business-app'
    expose:
      - "8081"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://business-db:3306/business-db
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: business-pass
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: ${OKTA_ISSUER_URI}
      SPRING_KAFKA_BOOTSTRAP_SERVERS: http://kafka:9092
    networks:
      - infrastructure-network
      - business-network
  business-db:
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: business-pass
      MYSQL_DATABASE: business-db
    healthcheck:
      test: ["CMD", 'mysqladmin', 'ping', '-h', 'localhost', '-u', 'root', '-p$$MYSQL_ROOT_PASSWORD' ]
      timeout: 10s
      retries: 10
    volumes:
      - business-db-data:/var/lib/mysql
    networks:
      - business-network



  ##############################
  ###        ACCOUNTS        ###
  ##############################
  accounts:
    build:
      context: ./
      args:
        MODULE_PATH: 'accounts'
        BUILD_MODULE_PATH: 'accounts/accounts-app'
    environment:
      OKTA_CLIENT_ORGURL: ${OKTA_ORG_URL}
      OKTA_CLIENT_TOKEN: ${OKTA_API_TOKEN}
    expose:
      - "8082"
    networks:
      - infrastructure-network



  ##############################
  ###        SERVICES        ###
  ##############################
  services:
    depends_on:
      services-db:
        condition: service_healthy
    build:
      context: ./
      args:
        MODULE_PATH: 'services'
        BUILD_MODULE_PATH: 'services/services-app'
    expose:
      - "8081"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://services-db:3306/services-db
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: services-pass
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: ${OKTA_ISSUER_URI}
      SPRING_KAFKA_BOOTSTRAP_SERVERS: http://kafka:9092
    networks:
      - infrastructure-network
      - services-network
  services-db:
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: services-pass
      MYSQL_DATABASE: services-db
    healthcheck:
      test: ["CMD", 'mysqladmin', 'ping', '-h', 'localhost', '-u', 'root', '-p$$MYSQL_ROOT_PASSWORD' ]
      timeout: 10s
      retries: 10
    volumes:
      - services-db-data:/var/lib/mysql
    networks:
      - services-network



networks:
  infrastructure-network:
  business-network:
  services-network:
  kafka-network:

volumes:
  business-db-data:
  services-db-data:
